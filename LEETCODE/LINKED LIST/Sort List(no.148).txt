对链表进行排序，nlogn的时间复杂度，常数空间复杂度
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode findMid(ListNode head) {
        ListNode slow = head;
        ListNode fast = head.next;
        while(fast != null && fast.next != null) {
            slow = slow.next;
            fast = fast.next;
            if(fast != null) {
                fast = fast.next;
            }
        }
        return slow;
    }
    
    public ListNode sortList(ListNode head) {// 归并排序
        if(head == null || head.next == null) {
            return head;
        }
        ListNode mid = findMid(head);// 找到中点
        ListNode left = head;
        ListNode right = mid.next;
        mid.next = null;
        left = sortList(left);// 排序左边
        right = sortList(right);// 排序右边
        ListNode resultHead = null;
        ListNode now = null;
        while(left != null && right != null) {
            if(left.val < right.val) {
                if(resultHead == null) {
                    resultHead = left;
                    now = left;
                } else {
                    now.next = left;
                    now = now.next;
                }
                left = left.next;
            } else {
                if(resultHead == null) {
                    resultHead = right;
                    now = right;
                } else {
                    now.next = right;
                    now = now.next;
                }
                right = right.next;
            }
        }
        if(left != null) {
            now.next = left;
        }
        if(right != null) {
            now.next = right;
        }
        return resultHead;
    }
}