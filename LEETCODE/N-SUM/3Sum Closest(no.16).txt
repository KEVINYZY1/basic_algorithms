Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.
For example, given array S = {-1 2 1 -4}, and target = 1.
The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

public class Solution {
	public int threeSumClosest(int[] nums, int target) {
		int result = 0;
		int minDif = 999999;
		Arrays.sort(nums);// 排序
		for (int i = 0; i < nums.length; ++i) {
			int right = nums.length - 1;
			int left = i + 1;
			while (left < right) {
				int temp = nums[i] + nums[left] + nums[right];
				if (Math.abs(temp - target) < minDif) {
					result = temp;
					minDif = Math.abs(temp - target);
				}
				if (temp < target) {
					++left;
				} else if (temp > target) {
					--right;
				} else {
					return target;
				}
			}
		}
		return result;
	}
}