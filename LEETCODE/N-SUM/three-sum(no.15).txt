public class Solution {
	private List<List<Integer>> results = new ArrayList<List<Integer>>();

	public List<List<Integer>> threeSum(int[] nums) {
		if (nums.length < 3)
			return results;
		Arrays.sort(nums);
		for (int i = 0; i < nums.length - 2; ++i) {
			int a = nums[i];
			twoSum(nums, i + 1, nums.length - 1, a);// 调用twoSum
			while (i + 1 < nums.length - 2 && nums[i + 1] == nums[i]) {// 需要把相同的数据跳过
				++i;
			}
		}
		return results;
	}

	public void twoSum(int[] nums, int left, int right, int choice) {
		int target = 0 - choice;
		while (left < right) {
			if (nums[left] + nums[right] == target) {
				List<Integer> result = new ArrayList<Integer>();
				result.add(choice);
				result.add(nums[left]);
				result.add(nums[right]);
				results.add(result);
				// 这种情况要把相同数据需要跳过
				while (left < right && nums[left] == nums[left + 1]) ++left;
				while (left < right && nums[right] == nums[right - 1]) --right;
				++left;
				--right;
			} else if (nums[left] + nums[right] < target) {
				++left;
			} else {
				--right;
			}
		}
	}
}