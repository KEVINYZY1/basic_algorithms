/*
Given an array of n positive integers and a positive integer s, 
find the minimal length of a subarray of which the sum ≥ s. 
If there isn't one, return 0 instead.
*/
// 由于这道题给的数据全部是正数，所以可以用滑动窗口的方式求解
public class Solution {
	public int minSubArrayLen(int s, int[] nums) {
		int status = 0; // 状态，0是移动滑动窗口右端，1是移动滑动窗口左端
		int ptr1 = 0, ptr2 = 0; // 滑动窗口的两个指针，滑动窗口是[ptr1, ptr2)区间
		int sum = 0;
		int min = 99999;
		while (ptr1 < nums.length && ptr2 <= nums.length) {
			if (status == 0) {// 移动滑动窗口右端（扩张窗口）
				if (ptr2 < nums.length) {
					sum += nums[ptr2];
				}
				++ptr2;
				if (sum >= s) {
					status = 1;
					min = Math.min(min, ptr2 - ptr1);
				}
			} else {// 移动滑动窗口左端（缩小窗口）
				sum -= nums[ptr1];
				++ptr1;
				if (sum < s) {
					status = 0;
				} else {
					min = Math.min(min, ptr2 - ptr1);
				}
			}
		}
		return min == 99999 ? 0 : min;
	}
}