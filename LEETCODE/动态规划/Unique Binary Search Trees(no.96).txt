// 状态转移公式：dp[i] 表示总共i个节点的二叉搜索树可能的种类
// dp[i] = (dp[0] * dp[i-1]) + (dp[1] * dp[i-2]) + ... + (dp[i-1] * dp[0])
public class Solution {
	public int numTrees(int n) {
		int[] dp = new int[n + 1];
		dp[0] = 1;
		dp[1] = 1;
		for (int i = 2; i <= n; ++i) {
			dp[i] = 0;
			for (int j = 0; j <= i - 1; ++j) {
				dp[i] += dp[j] * dp[i - 1 - j];
			}
		}
		return dp[n];
	}
}