Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

// 状态转移公式：dp[i][j]表示到达(i,j)路径上数字和的最小值
// dp[i][j] = min(dp[i-1][j], dp[i][j-1])+grid[i][j]
public class Solution {
	public int minPathSum(int[][] grid) {
		int[][] dp = new int[grid.length][grid[0].length];
		dp[0][0] = grid[0][0];
		for (int j = 1; j < grid[0].length; ++j) {// 初始化第一行
			dp[0][j] = dp[0][j - 1] + grid[0][j];
		}
		for (int i = 1; i < grid.length; ++i) {// 初始化第一列
			dp[i][0] = dp[i - 1][0] + grid[i][0];
		}
		for (int i = 1; i < grid.length; ++i) {// 动态规划
			for (int j = 1; j < grid[0].length; ++j) {
				dp[i][j] = Math.min(dp[i - 1][j], dp[i][j - 1]) + grid[i][j];
			}
		}
		return dp[grid.length - 1][grid[0].length - 1];
	}
}