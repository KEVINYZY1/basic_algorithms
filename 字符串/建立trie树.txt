class TrieNode {
	public HashMap<Character, TrieNode> next = new HashMap<Character, TrieNode>();// 字母加一个终结符#
}

public class Trie {
	private TrieNode root;

	public Trie() {
		root = new TrieNode();
	}

	public void insert(String word) {
		word = word + "#";// 表示字符结束
		TrieNode nowPtr = root;
		for (int i = 0; i < word.length(); ++i) {
			char c = word.charAt(i);
			if (!nowPtr.next.containsKey(c)) {
				nowPtr.next.put(c, new TrieNode());
			}
			nowPtr = nowPtr.next.get(c);
		}
	}

	public boolean searchPrefix(String prefix) {// 搜索前缀
		TrieNode nowPtr = root;
		for (int i = 0; i < prefix.length(); ++i) {
			char c = prefix.charAt(i);
			if (nowPtr.next.containsKey(c)) {
				nowPtr = nowPtr.next.get(c);
			} else {
				return false;
			}
		}
		return true;
	}

	public boolean searchWord(String word) {// 搜索单词
		word = word + "#";// 表示字符结束
		return searchPrefix(word);
	}
}